/**
 * –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ Q&A —Å–∏—Å—Ç–µ–º—ã
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ API backend'–∞
 */

class ChatApp {
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–∞—Ç–∞
     */
    constructor() {
        // API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        this.apiBaseUrl = 'http://localhost:8080';
        this.apiEndpoint = '/api/v1/query';
        this.ratingEndpoint = '/api/v1/rating';

        // UUID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ)
        this.userUuid = this.generateUUID();

        // DOM —ç–ª–µ–º–µ–Ω—Ç—ã
        this.messageInput = document.getElementById('messageInput');
        this.sendButton = document.getElementById('sendButton');
        this.resetButton = document.getElementById('resetButton');
        this.messagesContainer = document.getElementById('messages');
        this.chatContainer = document.getElementById('chatContainer');
        this.container = document.querySelector('.container');

        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        this.isLoading = false;
        this.messageHistory = [];

        this.initializeEventListeners();
        this.showWelcomeMessage();
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç UUID –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @returns {string} UUID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    generateUUID() {
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
            const r = Math.random() * 16 | 0;
            const v = c === 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    initializeEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        this.sendButton.addEventListener('click', () => this.sendMessage());

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        this.messageInput.addEventListener('keydown', (event) => {
            if (event.key === 'Enter' && !event.shiftKey) {
                event.preventDefault();
                this.sendMessage();
            }
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        this.messageInput.addEventListener('input', () => {
            this.updateSendButtonState();
            this.autoResizeTextarea();
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–±—Ä–æ—Å–∞ —á–∞—Ç–∞
        this.resetButton.addEventListener('click', () => this.resetChat());
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    showWelcomeMessage() {
        const welcomeMessage = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —è –≤–∞—à –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ —Å—Ñ–µ—Ä–µ –∑–∞–∫—É–ø–æ–∫, –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã, –∞ —è –Ω–∞ –Ω–∏—Ö –æ—Ç–≤–µ—á—É .';
        this.addMessage(welcomeMessage, 'assistant');
    }

    /**
     * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
     */
    autoResizeTextarea() {
        this.messageInput.style.height = 'auto';
        this.messageInput.style.height = Math.min(this.messageInput.scrollHeight, 120) + 'px';
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
     */
    updateSendButtonState() {
        const hasText = this.messageInput.value.trim().length > 0;
        this.sendButton.disabled = !hasText || this.isLoading;
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
     * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {string} sender - –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å ('user' –∏–ª–∏ 'assistant')
     * @param {boolean} isLoading - –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
     * @param {string} requestId - ID –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è —Å–≤—è–∑–∏ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º
     */
    addMessage(text, sender, isLoading = false, requestId = null) {
        const messageDiv = document.createElement('div');
        messageDiv.classList.add('message', sender);

        if (isLoading) {
            messageDiv.classList.add('loading');
            messageDiv.innerHTML = `
                –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç...
                <div class="loading-dots">
                    <span></span>
                    <span></span>
                    <span></span>
                </div>
            `;
        } else {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–æ–∫ –≤ —Ç–µ–∫—Å—Ç–µ
            const processedText = this.processLinks(text);
            messageDiv.innerHTML = processedText;
        }

        this.messagesContainer.appendChild(messageDiv);

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
        if (sender === 'assistant' && !isLoading && requestId) {
            const ratingComponent = this.createRatingComponent(requestId);
            this.messagesContainer.appendChild(ratingComponent);
        }

        this.scrollToBottom();

        return messageDiv;
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –æ—Ç–≤–µ—Ç–∞
     * @param {string} requestId - ID –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞
     * @returns {HTMLElement} DOM —ç–ª–µ–º–µ–Ω—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞
     */
    createRatingComponent(requestId) {
        const ratingDiv = document.createElement('div');
        ratingDiv.classList.add('rating-container');
        ratingDiv.setAttribute('data-request-id', requestId);

        const ratingText = document.createElement('span');
        ratingText.classList.add('rating-text');
        ratingText.textContent = '–û—Ü–µ–Ω–∏—Ç–µ –æ—Ç–≤–µ—Ç:';

        const starsContainer = document.createElement('div');
        starsContainer.classList.add('rating-stars');

        // –°–æ–∑–¥–∞–µ–º 5 –∑–≤–µ–∑–¥
        for (let i = 1; i <= 5; i++) {
            const star = document.createElement('span');
            star.classList.add('rating-star');
            star.textContent = 'üîò'; // –ü—É—Å—Ç–∞—è –∑–≤–µ–∑–¥–∞
            star.setAttribute('data-rating', i);

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            star.addEventListener('mouseenter', () => this.highlightStars(starsContainer, i));
            star.addEventListener('mouseleave', () => this.resetStars(starsContainer));
            star.addEventListener('click', () => this.submitRating(requestId, i, ratingDiv));

            starsContainer.appendChild(star);
        }

        ratingDiv.appendChild(ratingText);
        ratingDiv.appendChild(starsContainer);

        return ratingDiv;
    }

    /**
     * –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç –∑–≤–µ–∑–¥—ã –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
     * @param {HTMLElement} starsContainer - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ –∑–≤–µ–∑–¥–∞–º–∏
     * @param {number} rating - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –¥–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏
     */
    highlightStars(starsContainer, rating) {
        const stars = starsContainer.querySelectorAll('.rating-star');
        stars.forEach((star, index) => {
            const starRating = index + 1;
            star.textContent = starRating <= rating ? 'üîµ' : 'üîò';
        });
    }

    /**
     * –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø–æ–¥—Å–≤–µ—Ç–∫—É –∑–≤–µ–∑–¥
     * @param {HTMLElement} starsContainer - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ –∑–≤–µ–∑–¥–∞–º–∏
     */
    resetStars(starsContainer) {
        const stars = starsContainer.querySelectorAll('.rating-star');
        stars.forEach(star => {
            star.textContent = 'üîò';
        });
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å—Å—ã–ª–∫–∏ –≤ —Ç–µ–∫—Å—Ç–µ, –¥–µ–ª–∞—è –∏—Ö –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º–∏
     * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
     * @returns {string} –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å HTML —Å—Å—ã–ª–∫–∞–º–∏
     */
    processLinks(text) {
        // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ markdown-—Å—Å—ã–ª–æ–∫ [text](url)
        const markdownLinkRegex = /\[([^\]]+)\]\(([^)]+)\)/g;

        // –ó–∞–º–µ–Ω–∞ markdown-—Å—Å—ã–ª–æ–∫ –Ω–∞ HTML —Å—Å—ã–ª–∫–∏
        let processedText = text.replace(markdownLinkRegex, '<a href="$2" target="_blank" rel="noopener noreferrer">$1</a>');

        // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–±—ã—á–Ω—ã—Ö URL
        const urlRegex = /(https?:\/\/[^\s]+)/g;

        // –ó–∞–º–µ–Ω–∞ –æ–±—ã—á–Ω—ã—Ö URL –Ω–∞ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ (–µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —É–∂–µ –≤ HTML —Ç–µ–≥–∞—Ö)
        processedText = processedText.replace(urlRegex, (match) => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ URL —É–∂–µ –≤–Ω—É—Ç—Ä–∏ HTML —Ç–µ–≥–∞
            if (processedText.indexOf(`href="${match}"`) !== -1) {
                return match;
            }
            return `<a href="${match}" target="_blank" rel="noopener noreferrer">${match}</a>`;
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫
        processedText = processedText.replace(/\n/g, '<br>');

        return processedText;
    }

    /**
     * –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ —á–∞—Ç–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
     */
    scrollToBottom() {
        this.messagesContainer.scrollTop = this.messagesContainer.scrollHeight;
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async sendMessage() {
        const messageText = this.messageInput.value.trim();

        if (!messageText || this.isLoading) {
            return;
        }

        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.addMessage(messageText, 'user');
        this.messageHistory.push({ sender: 'user', text: messageText });

        // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
        this.messageInput.value = '';
        this.autoResizeTextarea();
        this.updateSendButtonState();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        this.setLoadingState(true);
        const loadingMessage = this.addMessage('', 'assistant', true);

        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
            const response = await this.callAPI(messageText);

            // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            loadingMessage.remove();

            // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –æ—Ç —Å–∏—Å—Ç–µ–º—ã —Å requestId –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞
            this.addMessage(response.response, 'assistant', false, response.requestId);
            this.messageHistory.push({ sender: 'assistant', text: response.response });

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error);

            // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            loadingMessage.remove();

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            const errorMessage = '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';
            this.addMessage(errorMessage, 'assistant');

        } finally {
            this.setLoadingState(false);
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
     * @param {string} requestId - ID –∑–∞–ø—Ä–æ—Å–∞
     * @param {number} rating - –û—Ü–µ–Ω–∫–∞ –æ—Ç 1 –¥–æ 5
     * @param {HTMLElement} ratingDiv - DOM —ç–ª–µ–º–µ–Ω—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞
     */
    async submitRating(requestId, rating, ratingDiv) {
        try {
            // –û—Ç–∫–ª—é—á–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–æ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            const stars = ratingDiv.querySelectorAll('.rating-star');
            stars.forEach(star => star.classList.add('disabled'));

            const ratingData = {
                request_id: requestId,
                history_session: this.userUuid,
                rating: rating
            };

            const response = await fetch(`${this.apiBaseUrl}${this.ratingEndpoint}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(ratingData)
            });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º UI –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
            this.updateRatingAfterSubmit(ratingDiv, rating);

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–π—Ç–∏–Ω–≥–∞:', error);

            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫–µ
            const stars = ratingDiv.querySelectorAll('.rating-star');
            stars.forEach(star => star.classList.remove('disabled'));

            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            const ratingText = ratingDiv.querySelector('.rating-text');
            const originalText = ratingText.textContent;
            ratingText.textContent = '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ü–µ–Ω–∫–∏';
            ratingText.style.color = '#dc2626';

            setTimeout(() => {
                ratingText.textContent = originalText;
                ratingText.style.color = '';
            }, 3000);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
     * @param {HTMLElement} ratingDiv - DOM —ç–ª–µ–º–µ–Ω—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞
     * @param {number} rating - –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
     */
    updateRatingAfterSubmit(ratingDiv, rating) {
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å "–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
        ratingDiv.classList.add('submitted');

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
        const ratingText = ratingDiv.querySelector('.rating-text');
        ratingText.textContent = `–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É! (${rating}/5)`;

        // –§–∏–∫—Å–∏—Ä—É–µ–º –∑–≤–µ–∑–¥—ã –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        const stars = ratingDiv.querySelectorAll('.rating-star');
        stars.forEach((star, index) => {
            const starRating = index + 1;
            star.textContent = starRating <= rating ? 'üîµ' : 'üîò';
            star.classList.remove('disabled');

            // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            star.replaceWith(star.cloneNode(true));
        });
    }

    /**
     * –í—ã–∑–æ–≤ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å
     * @param {string} query - –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @returns {Promise<Object>} –û—Ç–≤–µ—Ç –æ—Ç API
     */
    async callAPI(query) {
        const requestId = this.generateUUID();

        const requestBody = {
            request_id: requestId,
            query: query
        };

        const response = await fetch(`${this.apiBaseUrl}${this.apiEndpoint}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(requestBody)
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const result = await response.json();
        // –î–æ–±–∞–≤–ª—è–µ–º requestId –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –¥–ª—è —Å–≤—è–∑–∏ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º
        result.requestId = requestId;
        return result;
    }

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
     * @param {boolean} loading - –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
     */
    setLoadingState(loading) {
        this.isLoading = loading;
        this.updateSendButtonState();

        if (loading) {
            this.container.classList.add('loading');
        } else {
            this.container.classList.remove('loading');
        }
    }

    /**
     * –°–±—Ä–æ—Å —á–∞—Ç–∞ –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
     */
    resetChat() {
        // –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
        this.messageHistory = [];

        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
        this.messagesContainer.innerHTML = '';

        // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
        this.messageInput.value = '';
        this.autoResizeTextarea();
        this.updateSendButtonState();

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π UUID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.userUuid = this.generateUUID();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        this.showWelcomeMessage();

        // –£–±–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ –∞–∫—Ç–∏–≤–Ω–æ
        this.setLoadingState(false);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', () => {
    new ChatApp();
});
